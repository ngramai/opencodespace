name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.0)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"
    
    - name: Validate version format
      run: |
        if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version must be in format X.Y.Z (e.g., 1.0.0)"
          exit 1
        fi
    
    - name: Update version in files
      run: |
        VERSION="${{ github.event.inputs.version }}"
        
        # Update __init__.py
        sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" src/opencodespace/__init__.py
        
        # Update pyproject.toml
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
        
        # Update setup.py
        sed -i "s/version=\".*\"/version=\"$VERSION\"/" setup.py
    
    - name: Commit version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add src/opencodespace/__init__.py pyproject.toml setup.py
        git commit -m "Bump version to ${{ github.event.inputs.version }}"
        git push
    
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "v${{ github.event.inputs.version }}" \
          --title "Release v${{ github.event.inputs.version }}" \
          --notes "Release version ${{ github.event.inputs.version }}" \
          --draft 